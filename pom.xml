<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- PROJECT INFORMATION -->
    <groupId>org.vetmeduni</groupId>
    <artifactId>readtools</artifactId>
    <packaging>jar</packaging>
    <version>0.1.0-SNAPSHOT</version>
    <name>ReadTools</name>
    <description>Tools for sequencing barcoded read data (in FASTQ/BAM format)</description>
    <!-- TODO: add url -->
    <inceptionYear>2015</inceptionYear>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>${developer.main}</name>
            <email>${developer.main.email}</email>
            <roles>
                <role>Programmer</role>
            </roles>
        </developer>
    </developers>

    <!-- fake scm connection for make work the buildnumber-maven-plugin: TODO: change to the repo -->
    <scm>
        <connection>scm:git:http://none</connection>
        <url>scm:git:https://none</url>
    </scm>

    <!-- PROJECT PROPERTIES AND REPOSITORIES -->
    <properties>
        <!-- this is for allow skip buildnumber from the command line when developing -->
        <skip.buildnumber>false</skip.buildnumber>
        <!-- java versions and encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.java.version>1.8</project.java.version>
        <!-- Dependencies versions -->
        <junit.version>4.12</junit.version>
        <htsjdk.version>1.140</htsjdk.version>
        <commons-cli.version>1.3.1</commons-cli.version>
        <!-- maven plugin versions -->
        <maven.jar.plugin>2.4</maven.jar.plugin>
        <maven.compiler.plugin>3.3</maven.compiler.plugin>
        <maven.clean.plugin>2.6.1</maven.clean.plugin>
        <maven.buildnumber.plugin>1.4</maven.buildnumber.plugin>
        <maven.build.helper.plugin>1.9</maven.build.helper.plugin>
        <!-- distribution properties -->
        <dist.folder>dist</dist.folder>
        <program.name>${project.name}</program.name>
        <program.version>${program.majorVersion}.${program.minorVersion}.${program.incrementalVersion}</program.version>
        <developer.main>Daniel Gomez-Sanchez</developer.main>
        <developer.main.email>daniel.gomez.sanchez@hotmail.es</developer.main.email>
        <main.class>${project.groupId}.${project.artifactId}.Main</main.class>
    </properties>

    <!-- DEPENDENCIES -->
    <dependencies>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.samtools</groupId>
            <artifactId>htsjdk</artifactId>
            <version>${htsjdk.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons-cli.version}</version>
        </dependency>

        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>3.4</version>
        </dependency>

    </dependencies>

    <!-- BUILDING -->
    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.prop</include>
                </includes>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin}</version>
                <configuration>
                    <source>${project.java.version}</source>
                    <target>${project.java.version}</target>
                </configuration>
            </plugin>

            <!-- Maven Jar Pluging -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- This is for the build number in the variable ${buildNumber} -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>${maven.buildnumber.plugin}</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skip.buildnumber}</skip>
                    <shortRevisionLength>8</shortRevisionLength>
                    <!-- This ensures that even if we are not connected to scm than also take the version from local .svn file -->
                    <revisionOnScmFailure></revisionOnScmFailure>
                    <useLastCommittedRevision>true</useLastCommittedRevision>
                    <timestampFormat>{0,date,yyyy-MM-dd HH:mm:ss}</timestampFormat>
                    <!--
	                doCheck and doUpdate actually talk to repository if it's true,
	                Check would check that there are no local changes.
	                Update would update it
	                -->
                    <doCheck>true</doCheck>
                    <doUpdate>false</doUpdate>
                    <!--
                    <format>{0,number}.{1,number}.{2,number}</format>
                    <items>
                        <item>buildNumber0</item>
                        <item>buildNumber1</item>
                        <item>buildNumber2</item>
                    </items>
                    -->
                </configuration>
            </plugin>

            <!-- this is for parse the version and remove the SNAPSHOT tag to pass to the program -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${maven.build.helper.plugin}</version>
                <configuration>
                    <propertyPrefix>program</propertyPrefix>
                </configuration>
                <executions>
                    <execution>
                        <id>parse-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- for clean the distribution folder -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven.clean.plugin}</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${dist.folder}</directory>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- For including dependencies -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <outputDirectory>${project.basedir}/${dist.folder}</outputDirectory>
                    <finalName>${project.name}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
